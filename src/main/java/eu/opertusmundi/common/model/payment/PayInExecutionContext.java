package eu.opertusmundi.common.model.payment;

import java.math.BigDecimal;
import java.time.ZonedDateTime;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * Helper class that holds information generated by the platform and MANGOPAY
 * during the creation and execution of a PaIn
 */
@Getter
@Setter
@ToString
public abstract class PayInExecutionContext<C extends PayInCommand> {

    protected PayInExecutionContext(C command) {
        this.command = command;
    }

    @Setter(AccessLevel.PRIVATE)
    private C command;

    /**
     * PayIn idempotent key
     *
     * <p>
     * For orders, the key is the order key
     * <p>
     * For prepared PayIns the key is the PayIn key
     */
    protected String idempotencyKey;

    /**
     * Payment provider PayIn unique identifier
     */
    protected String payIn;

    /**
     * The MANGOPAY identifier of the user who is creating the PayIn
     */
    protected String creditedUserId;

    /**
     * The MANGOPAY identifier of the wallet where money will be credited
     */
    protected String creditedWalletId;

    /**
     * Updated by the context e.g. for an order, get the total price including
     * VAT
     */
    protected BigDecimal debitedFunds;

    /**
     * Transaction status set by the provider
     */
    protected EnumTransactionStatus status;

    /**
     * Creation date as set by the payment provider
     */
    protected ZonedDateTime createdOn;

    /**
     * Execution date as set by the payment provider
     */
    protected ZonedDateTime executedOn;

    /**
     * Payment provider error code if operation has failed
     */
    protected String resultCode;

    /**
     * Payment provider message
     */
    protected String resultMessage;

    /**
     * Reference number generated by the payment service
     */
    protected String referenceNumber;

}
